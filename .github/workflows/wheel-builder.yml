# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Wheel Builder

on:
  repository_dispatch:
    types: [wheel-builder]

jobs:
  linux:
    runs-on: ubuntu-latest
    container: pyca/cryptography-manylinux1:x86_64
    strategy:
      matrix:
        # python versions on container
        PYTHON: ["cp35-cp35m", "cp36-cp36m", "cp37-cp37m", "cp38-cp38"]
    name: "Python ${{ matrix.PYTHON }} for manylinux1"
    steps:
      - run: /opt/python/${{ matrix.PYTHON }}/bin/python -m venv .venv
      #- name: Downgrade pip, can't remember why
      #  run: .venv/bin/pip install -U pip==10.0.1
      - name: Install python dependencies
        run: .venv/bin/pip install -U setuptools wheel
      - run: |
          .venv/bin/pip wheel cx_Freeze --no-binary cx_Freeze --no-deps --wheel-dir=tmpwheelhouse
      - run: auditwheel repair tmpwheelhouse/cx_Freeze*.whl -w wheelhouse/
      - run: .venv/bin/pip install cx_Freeze --no-index -f wheelhouse/
      - run: |
          .venv/bin/python -c "import cx_Freeze; print(cx_Freeze.__version__)"
      - run: mkdir cx_Freeze-wheelhouse
      - run: mv wheelhouse/cx_Freeze*.whl cx_Freeze-wheelhouse/
      - uses: actions/upload-artifact@v2
        with:
          name: "cx_Freeze-${{ github.event.client_payload.BUILD_VERSION }}-manylinux1-${{ matrix.PYTHON }}"
          path: cx_Freeze-wheelhouse/

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]
        system:
          - {arch: 'x86', platform: 'win32'}
          - {arch: 'x64', platform: 'win64'}
    name: "Python ${{ matrix.python-version }} on ${{ matrix.system.platform }}"
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.system.arch }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools wheel
      - run: pip wheel cx_Freeze==${{ github.event.client_payload.BUILD_VERSION }} --wheel-dir=wheelhouse --no-binary cx_Freeze
      - run: pip install -f wheelhouse --no-index cx_Freeze
      - run: |
          python -c "import cx_Freeze; print(cx_Freeze.__version__)"
      - run: mkdir cx_Freeze-wheelhouse
      - run: move wheelhouse\cx_Freeze*.whl cx_Freeze-wheelhouse\
      - uses: actions/upload-artifact@v1
        with:
          name: "cx_Freeze-${{ github.event.client_payload.BUILD_VERSION }}-${{ matrix.system.platform }}-${{ matrix.python-version }}"
          path: cx_Freeze-wheelhouse\

  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist
        twine upload dist/*

